{"version":3,"sources":["auth/components/AuthenticatedRoute.js","header/Header.js","apiConfig.js","auth/AdminAPI.js","auth/messages.js","auth/components/SignUp.js","auth/components/SignIn.js","auth/components/SignOut.js","auth/components/AlertDismissible.js","auth/components/subject.js","auth/components/addSubject.js","auth/api.js","auth/components/subjects.js","auth/components/feed.js","auth/components/addFeed.js","auth/components/feeds.js","auth/components/Student.js","auth/components/AddNewStudent.js","auth/StudentAPI.js","auth/components/Students.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","authenticatedOptions","Fragment","unauthenticatedOptions","alwaysOptions","Header","className","email","apiUrls","production","development","apiUrl","window","location","hostname","signIn","checkAdmin","axios","post","signUpSuccess","signUpFailure","signInSuccess","signInFailure","addSubSuccess","addSubFailure","signOutSuccess","changePasswordSuccess","changePasswordFailure","SignUp","Changehandler","e","setState","target","name","value","SubmitHandeler","event","preventDefault","alert","history","setUser","newAdmin","admin","Name","state","Email","Password","Gender","Phone","console","log","AddNewAdmin","then","res","data","messages","push","catch","error","this","onSubmit","type","onChange","placeholder","href","withRouter","SignIn","SignOut","clearUser","delete","headers","Authorization","token","signOut","finally","AlertDismissible","show","Alert","key","index","dismissible","variant","onClose","Heading","message","React","Subject","componentWillMount","subjectCode","level","updateSubject","updatetheSubjects","id","deleteSubject","SubjectCode","Level","onClick","AddSubject","subject","newSub","response","Teacher","Exam","Subjects","deleteSubjectByID","newSubjectsList","subjects","filter","_id","setSubjects","stat","patch","newSubject","indexOfSubject","findIndex","splice","get","allSubjects","length","map","AddSubjects","Feed","description","date","endDate","updateFeed","updatetheFeeds","deleteFeed","Description","Date","EndDate","AddFeed","feed","newFeed","addFeedSuccess","Feeds","deleteFeedByID","newFeedsList","feeds","setFeeds","theNewFeed","indexOfFeed","allFeeds","AddFeeds","Student","onchange","input","isedit","FirstName","LastName","all","deleteStudent","editStudent","ID","AddNewStudent","AddNewStuddent","students","student","addnewStudent","newStudents","indexOf","setStudents","setShowform","sub","Students","isadd","tempstudent","check","getAll","deleteStudentByID","newStudentList","addnewstudent","doesShow","isclick","studentInfo","handleUpdate","onest","updateStudent","indexOfStudent","newart","currentStudent","allStudent","addnewst","n","editstudent","disabled","App","alerts","path","appJsx","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.098b7e24.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n// props will include a `user` object or empty object\r\n// props will include a `component` as `Component` or a `render`\r\n// all other props that may be passed in are `..rest`\r\nconst AuthenticatedRoute = ({\r\n  user,\r\n  component: Component,\r\n  render,\r\n  ...rest\r\n}) => {\r\n  // if props include a `user` object and a `render` then create route with `render`\r\n  if (user && render) {\r\n    return <Route {...rest} render={render} />\r\n\r\n  // if props include a `user` object but no `render` then create route with `Component`\r\n  // if props do not include a `user` object then redirect to home\r\n  } else {\r\n    return <Route {...rest} render={props =>\r\n      user ? <Component {...props} /> : <Redirect to='/' />\r\n    } />\r\n  }\r\n}\r\n\r\nexport default AuthenticatedRoute\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Header.scss'\r\n\r\nconst authenticatedOptions = (\r\n  <React.Fragment>\r\n    <Link to=\"/sign-out\">Sign Out</Link>\r\n    <Link to=\"/Subjects\">Subjects</Link>\r\n    <Link to=\"/Feeds\">Feeds</Link>\r\n    <Link to=\"/Students\">Students</Link>\r\n    {/* <Link to=\"/addSub\"> add Subjects</Link> */}\r\n    {/* <Link to=\"/update-sub\"> update Subjects</Link> */}\r\n  </React.Fragment>\r\n);\r\n\r\nconst unauthenticatedOptions = (\r\n  <React.Fragment>\r\n    <Link to=\"/sign-up\">Sign Up</Link>\r\n    <Link to=\"/sign-in\">Sign In</Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst alwaysOptions = (\r\n  <React.Fragment>\r\n    <Link to=\"/\">Home</Link>\r\n  </React.Fragment>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <header className=\"main-header\">\r\n    <h1>School App</h1>\r\n    <nav>\r\n      { user && <span>Welcome, {user.email}</span>}\r\n      { user ? authenticatedOptions : unauthenticatedOptions }\r\n      { alwaysOptions }\r\n    </nav>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\r\nconst expressPort = 5000\r\nconst apiUrls = {\r\n  production: \"https://calm-springs-76319.herokuapp.com/\",\r\n  development: `http://localhost:${expressPort}/api`\r\n};\r\n\r\nif (window.location.hostname === 'localhost') {\r\n  apiUrl = apiUrls.development\r\n} else {\r\n  apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import apiUrl from \"../apiConfig\";\r\nimport axios from \"axios\";\r\n// INDEX, SHOW, CREATE, UPDATE, DESTROY\r\n\r\n//Add new Admin\r\nconst AddNewAdmin = newAdmin => {\r\n  return axios.post(`${apiUrl}/register`, newAdmin);\r\n};\r\n\r\n//LogIn\r\n\r\nconst signIn = checkAdmin => {\r\n  return axios.post(`${apiUrl}/login`, checkAdmin);\r\n};\r\n\r\n\r\nconst changePassword = changed =>{\r\n  return axios.patch(`${apiUrl}/login`, changed );\r\n}\r\n//Logout\r\nconst signOut = user => {\r\n  return axios.delete(`${apiUrl}/logout`, user, {\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  });\r\n};\r\nexport { AddNewAdmin, signIn,changePassword , signOut };\r\n","export default {\r\n  signUpSuccess: \"Succesfully registered! You've been signed in as well.\",\r\n  signUpFailure:\r\n    \"Registration failed. Email may be taked, or passwords\" + \" don't match.\",\r\n  signInSuccess: \"Welcome!\",\r\n  signInFailure:\r\n    \"Failed to sign in. Check your email and password and try\" + \" again.\",\r\n  addSubSuccess: \"Subject Added successfully!\",\r\n  addSubFailure:\r\n    \"there is some error in add this subject , already Exis!\",\r\n  signOutSuccess: \"Come back soon!\",\r\n  changePasswordSuccess: \"Password changed successfully!\",\r\n  changePasswordFailure:\r\n    \"Failed to change passwords. Check your old password\" + \" and try again.\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AddNewAdmin, signIn } from \"../AdminAPI\";\r\nimport messages from \"../messages\";\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: \"\",\r\n      Email: \"\",\r\n      Password: \"\",\r\n      Gender: \"\",\r\n      Phone: \"\"\r\n    };\r\n  }\r\n  Changehandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  SubmitHandeler = event => {\r\n    event.preventDefault();\r\n    const { alert, history, setUser } = this.props;\r\n    const newAdmin = {\r\n      admin: {\r\n        Name: this.state.Name,\r\n        Email: this.state.Email,\r\n        Password: this.state.Password,\r\n        Gender: this.state.Gender,\r\n        Phone: this.state.Phone\r\n      }\r\n    };\r\n    console.log(newAdmin);\r\n    AddNewAdmin(newAdmin)\r\n      .then(() => signIn(this.state))\r\n      // .then(response => {\r\n      //   console.log(\"admin  has been added\", response.data);\r\n      // })\r\n      // // console.log(this.state)\r\n       .then(res => setUser(res.data))\r\n      .then(() => alert(messages.signUpSuccess, \"success\"))\r\n      .then(() => history.push(\"/\"))\r\n      .catch(error => {\r\n        console.error(error);\r\n        this.setState({\r\n          Name: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          Gender: \"\",\r\n          Phone: \"\"\r\n        });\r\n        alert(messages.signUpFailure, \"danger\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { Name, Email, Password, Gender, Phone } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.SubmitHandeler}>\r\n          <h3>Sign Up</h3>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Name\"\r\n              value={Name}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\" name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"Email\"\r\n              value={Email}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter email\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"Password\"\r\n              value={Password}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter password\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Gender</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Gender\"\r\n              value={Gender}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\"Gender\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Phone</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Phone\"\r\n              value={Phone}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\"966-555-555\"\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n            Sign Up\r\n          </button>\r\n          <p className=\"forgot-password text-right\">\r\n            Already registered <a href=\"#/sign-in\">sign in?</a>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { signIn } from \"../AdminAPI\";\r\nimport messages from \"../messages\";\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Email: \"\",\r\n      Password: \"\"\r\n    };\r\n  }\r\n  Changehandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  SubmitHandeler = event => {\r\n    event.preventDefault();\r\n\r\n    const { alert, history, setUser } = this.props;\r\n\r\n    signIn(this.state)\r\n      .then(res => setUser(res.data))\r\n      // .then(response => {\r\n      //   console.log(\"admin  has been loged\", response.data);\r\n      // })\r\n      .then(() => alert(messages.signInSuccess, \"success\"))\r\n      .then(() => history.push(\"/\"))\r\n      .catch(error => {\r\n        console.error(error);\r\n        this.setState({ Email: \"\", Password: \"\" });\r\n        alert(messages.signInFailure, \"danger\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { Email, Password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.SubmitHandeler}>\r\n          <h3>Sign In</h3>\r\n          <div className=\"form-group\">\r\n            <label>Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"Email\"\r\n              value={Email}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter email\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"Password\"\r\n              value={Password}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter password\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n            Submit\r\n          </button>\r\n          {/* <p className=\"forgot-password text-right\">\r\n            Forgot <a href=\"#\">password?</a>\r\n          </p> */}\r\n        </form>\r\n        {/* <h3>React Login Component</h3> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignIn);\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { signOut } from \"../AdminAPI\";\r\nimport messages from \"../messages\";\r\n\r\nclass SignOut extends Component {\r\n  componentDidMount() {\r\n    const { alert, history, clearUser, user } = this.props;\r\n\r\n    signOut(user)\r\n      .finally(() => alert(messages.signOutSuccess, \"success\"))\r\n      .finally(() => history.push(\"/\"))\r\n      .finally(() => clearUser());\r\n  }\r\n  render() {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport default withRouter(SignOut);\r\n","import React, { Component } from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nclass AlertDismissible extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        show: true,\r\n      };\r\n    }\r\n  \r\n    render() {\r\n      const handleDismiss = () => this.setState({ show: false });\r\n      if (this.state.show) {\r\n        return (\r\n            <Alert key={this.props.index} dismissible variant={this.props.variant} onClose={handleDismiss}>\r\n                <Alert.Heading>\r\n                    {this.props.message}\r\n                </Alert.Heading>\r\n            </Alert>\r\n        )\r\n      } else {\r\n        return <React.Fragment/>\r\n      }\r\n    }\r\n  }\r\n  \r\nexport default AlertDismissible\r\n","import React from \"react\";\r\n// import { updateSubject } from \"../api\";\r\nclass Subject extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: \"\",\r\n      SubjectCode: \"\",\r\n      Level: \"\"\r\n    };\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.setState({\r\n      name: this.props.name,\r\n      subjectCode: this.props.subjectCode,\r\n      level: this.props.level\r\n    });\r\n  };\r\n  updateSubject  = event => {\r\n    event.preventDefault();\r\n    console.log(\"update\", this.state);\r\n    this.props.updatetheSubjects(this.props.id, this.state);\r\n  };\r\n  Changehandler = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  deleteSubject = event => {\r\n    event.preventDefault();\r\n    this.props.deleteSubject(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    const { name, subjectCode, level } = this.state;\r\n    return (\r\n      <div className=\"subject\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.Changehandler}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"subjectCode\"\r\n          value={subjectCode}\r\n          onChange={this.Changehandler}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Level\"\r\n          value={level}\r\n          onChange={this.Changehandler}\r\n        />\r\n        <br />\r\n        {/* Subject name & subject Code  & student Grade */}\r\n        {/* <h2> Subject Name: {this.props.name}</h2>\r\n        <sub>Subject Code: {this.props.subjectCode}</sub>\r\n        <p>Level: {this.props.Level}</p> */}\r\n        <button onClick={this.deleteSubject}>Delete</button>\r\n        <button onClick={this.updateSubject}>Update</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Subject;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { addNewSubject } from \"../api\";\r\nimport messages from \"../messages\";\r\n\r\nclass AddSubject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: \"\",\r\n      SubjectCode: \"\",\r\n      Level: \"\",\r\n      Teacher: \"\",\r\n      Exam: \"\"\r\n    };\r\n  }\r\n  Changehandler = e => {\r\n    console.log(e.target.name);\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  SubmitHandeler = e => {\r\n    const { alert, history } = this.props;\r\n    e.preventDefault();\r\n    console.log(\"this is state\", this.state);\r\n    const newSub = {\r\n      subject: {\r\n        Name: this.state.Name,\r\n        SubjectCode: this.state.SubjectCode,\r\n        Level: this.state.Level\r\n        // Teacher: this.state.Teacher\r\n      }\r\n    };\r\n    console.log(newSub);\r\n    addNewSubject(newSub)\r\n      .then(() => alert(messages.addSubSuccess, \"success\"))\r\n      .then(() => history.push(\"/\"))\r\n      .then(response => {\r\n        console.log(\"subject  has been added\", response.data);\r\n        this.props.AddSubject(newSub);\r\n        // this.props.addNewSubject(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"API error\", error);\r\n        this.setState({\r\n          Name: \"\",\r\n          SubjectCode: \"\",\r\n          Level: \"\"\r\n        });\r\n        // alert(messages.addSubFailure, \"danger\");\r\n      });\r\n  };\r\n  render() {\r\n    const { Name, SubjectCode, Level } = this.state;\r\n    return (\r\n      <div>\r\n        <br/>\r\n        <br/>\r\n        <form onSubmit={this.SubmitHandeler}>\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Name\"\r\n              value={Name}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\" Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Code</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"SubjectCode\"\r\n              value={SubjectCode}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\" Code\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Level</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Level\"\r\n              value={Level}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\" Level\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n            {\" \"}\r\n            submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddSubject);\r\n","import apiUrl from \"../apiConfig\";\r\nimport axios from \"axios\";\r\n\r\n// INDEX, SHOW, CREATE, UPDATE, DESTROY\r\n\r\n// Get All Subjects\r\nconst getAllSubjects = () => {\r\n  return axios.get(`${apiUrl}/subjects`);\r\n};\r\n\r\n// Delete Subject by ID\r\nconst deleteSubjectByID = id => {\r\n  return axios.delete(`${apiUrl}/subjects/${id}`);\r\n};\r\n\r\n//Add Subject\r\nconst addNewSubject = subject => {\r\n  return axios.post(`${apiUrl}/AddNewSub`, subject);\r\n};\r\n\r\n\r\n  // Update existing Subject\r\n const updateSubject = (id, subject) => {\r\n   return axios.patch(`${apiUrl}/subjects/${id}`, subject);\r\n };\r\n  // Create new Exam\r\n  const addExam = exam => {\r\n    return axios.post(`${apiUrl}/subjects/:SubjectCode/exams`);\r\n  };\r\n\r\n\r\n\r\n// Get All Feeds\r\nconst getAllFeeds = () => {\r\n  return axios.get(`${apiUrl}/feeds`);\r\n};\r\n\r\n// Delete Feed by ID\r\nconst deleteFeedByID = id => {\r\n  return axios.delete(`${apiUrl}/feeds/${id}`);\r\n};\r\n\r\n\r\n//Add new feed\r\nconst addNewfeed = feed => {\r\n  return axios.post(`${apiUrl}/AddFeed`, feed);\r\n};\r\n\r\n // Update existing Feed\r\n const updateFeed = (id, feed ) => {\r\n  return axios.patch(`${apiUrl}/feeds/${id}`, feed);\r\n};\r\n\r\n\r\n \r\n\r\n\r\n  export {\r\n    getAllSubjects,\r\n    deleteSubjectByID,\r\n    addNewSubject,\r\n    updateSubject,\r\n    addExam,\r\n    getAllFeeds,\r\n    deleteFeedByID, \r\n    addNewfeed,\r\n    updateFeed\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Subject from \"./subject\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport AddSubject from \"./addSubject\";\r\nimport { getAllSubjects, deleteSubjectByID, updateSubject } from \"../api\";\r\n\r\nclass Subjects extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    // Make an API Call to Get all Subjects\r\n    getAllSubjects()\r\n      .then(response => {\r\n        this.props.setSubjects(response.data.subjects);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"API ERROR:\", error);\r\n      });\r\n  }\r\n\r\n  // Make an API Call to Delete a Subject\r\n  deleteSubject = id => {\r\n    console.log(\"The Subject ID to Delete\", id);\r\n\r\n    deleteSubjectByID(id)\r\n      .then(response => {\r\n        console.log(`The Subject with the ID ${id} has been deleted.`);\r\n\r\n        const newSubjectsList = this.props.subjects.filter(subject => {\r\n          return subject._id !== id;\r\n        });\r\n\r\n        this.props.setSubjects(newSubjectsList);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"API ERROR:\", error);\r\n      });\r\n  };\r\n  updatetheSubjects = (id, stat) => {\r\n    // const { alert, history } = this.props;\r\n    // e.preventDefault();\r\n    console.log(\"this is state\", id, stat);\r\n    const newSub = {\r\n      subject: {\r\n        Name: stat.name,\r\n        SubjectCode: stat.subjectCode,\r\n        Level: stat.level\r\n        // Teacher: this.state.Teacher\r\n      }\r\n    };\r\n    console.log(newSub);\r\n    updateSubject(id, newSub)\r\n      .then(response => {\r\n           const newSubject = [...this.props.subjects];\r\n           const indexOfSubject = this.props.subjects.findIndex(\r\n             subject => subject._id === id);\r\n        console.log(\r\n          `The Subject with the ID ${id} has been updated.`,response.data);\r\n        newSubject.splice(indexOfSubject, 1, newSub);\r\n        this.props.setSubjects(newSubject);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"API error\", error);\r\n        this.setState({\r\n          Name: \"\",\r\n          SubjectCode: \"\",\r\n          Level: \"\"\r\n        });\r\n        // alert(messages.addSubFailure, \"danger\");\r\n      })\r\n  };\r\n\r\n  render() {\r\n    let allSubjects = <h4>No Subjects!</h4>;\r\n\r\n    if (this.props.subjects.length > 0) {\r\n      allSubjects = this.props.subjects.map((subject, index) => {\r\n        return (\r\n          <Subject\r\n            name={subject.Name}\r\n            subjectCode={subject.SubjectCode}\r\n            level={subject.Level}\r\n            id={subject._id}\r\n            deleteSubject={this.deleteSubject}\r\n            updatetheSubjects={this.updatetheSubjects}\r\n            key={index}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <h3>All Subjects</h3>\r\n        {allSubjects}\r\n        <AddSubject AddSubject={this.props.AddSubjects} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Subjects);\r\n","import React from \"react\";\r\nclass Feed extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: \"\",\r\n      Description: \"\",\r\n      Date: \"\",\r\n      EndDate: \"\"\r\n     \r\n    };\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.setState({\r\n      name: this.props.name,\r\n      description: this.props.description,\r\n      date: this.props.date,\r\n      date:this.props.endDate\r\n\r\n    });\r\n  };\r\n  updateFeed  = event => {\r\n    event.preventDefault();\r\n    console.log(\"update\", this.state);\r\n    this.props.updatetheFeeds(this.props.id, this.state);\r\n  };\r\n  Changehandler = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  deleteFeed = event => {\r\n    event.preventDefault();\r\n    this.props.deleteFeed(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    const { name, description} = this.state;\r\n    return (\r\n      <div className=\"feed\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.Changehandler}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={this.Changehandler}\r\n        />\r\n        <br />\r\n    \r\n    \r\n        <button onClick={this.deleteFeed}>Delete</button>\r\n        <button onClick={this.updateFeed}>Update</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { addNewfeed } from \"../api\";\r\nimport messages from \"../messages\";\r\n\r\nclass AddFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: \"\",\r\n      Description: \"\",\r\n      Date: \"\",\r\n      EndDate: \"\"\r\n     \r\n    };\r\n  }\r\n\r\n  Changehandler = e => {\r\n    console.log(e.target.name);\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  SubmitHandeler = e => {\r\n    const { alert, history } = this.props;\r\n    e.preventDefault();\r\n    console.log(\"this is state\", this.state);\r\n    const newFeed = {\r\n      subject: {\r\n        Name: this.state.Name,\r\n        Description: this.state.Description,\r\n        Date: this.state.Date,\r\n        EndDate: this.state.EndDate\r\n\r\n      }\r\n    };\r\n    console.log(newFeed);\r\n    addNewfeed(newFeed)\r\n      .then(() => alert(messages.addFeedSuccess, \"success\"))\r\n      .then(() => history.push(\"/\"))\r\n      .then(response => {\r\n        console.log(\"feed has been added\", response.data);\r\n        this.props.AddFeed(newFeed);\r\n     \r\n      })\r\n      .catch(error => {\r\n        console.log(\"API error\", error);\r\n        this.setState({\r\n          Name: \"\",\r\n          Description: \"\",\r\n          Date: \"\",\r\n          EndDate: \"\"\r\n        });\r\n        // alert(messages.addSubFailure, \"danger\");\r\n      });\r\n  };\r\n  render() {\r\n  \r\n    const { Name, Description} = this.state;\r\n    return (\r\n      <div>\r\n        <br/>\r\n        <br/>\r\n        <form onSubmit={this.SubmitHandeler}>\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Name\"\r\n              value={Name}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\" Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Description\"\r\n              value={Description}\r\n              onChange={this.Changehandler}\r\n              className=\"form-control\"\r\n              placeholder=\" Description\"\r\n            />\r\n          </div>\r\n       \r\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n            {\" \"}\r\n            submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddFeed);\r\n","import React from \"react\";\r\nimport Feed from \"./feed\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport AddFeed from \"./addFeed\";\r\nimport { getAllFeeds, deleteFeedByID, updateFeed } from \"../api\";\r\n\r\nclass Feeds extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    // Make an API Call to Get all feeds\r\n    getAllFeeds()\r\n      .then(response => {\r\n        this.props.setFeeds(response.data.feeds);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"API ERROR:\", error);\r\n      });\r\n  }\r\n\r\n  // Make an API Call to Delete a Feed\r\n  deleteFeed = id => {\r\n    console.log(\"The Feed ID to Delete\", id);\r\n\r\n    deleteFeedByID(id)\r\n      .then(response => {\r\n        console.log(`The Feed with the ID ${id} has been deleted.`);\r\n\r\n        const newFeedsList = this.props.feeds.filter(feed => {\r\n          return feed._id !== id;\r\n        });\r\n\r\n        this.props.setFeeds(newFeedsList);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"API ERROR:\", error);\r\n      });\r\n  };\r\n  updatetheFeeds = (id, stat) => {\r\n    // const { alert, history } = this.props;\r\n    // e.preventDefault();\r\n    console.log(\"this is state\", id, stat);\r\n    const theNewFeed = {\r\n      feed: {\r\n        Name: stat.name,\r\n        Description: stat.description,\r\n        Date: stat.date,\r\n        EndDate: stat.endDate\r\n    \r\n      }\r\n    };\r\n    console.log(theNewFeed);\r\n    updateFeed(id, theNewFeed)\r\n      .then(response => {\r\n           const newFeed = [...this.props.feeds];\r\n           const indexOfFeed  = this.props.feeds.findIndex(\r\n             feed => feed._id === id);\r\n        console.log(\r\n          `The Article with the ID ${id} has been updated.`,response.data);\r\n          newFeed.splice(indexOfFeed, 1, theNewFeed);\r\n        this.props.setFeeds(newFeed);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"API error\", error);\r\n        this.setState({\r\n          Name: \"\",\r\n          Description: \"\",\r\n          Date: \"\",\r\n          EndDate:\"\"\r\n        });\r\n        // alert(messages.addSubFailure, \"danger\");\r\n      })\r\n  };\r\n\r\n  render() {\r\n    let allFeeds = <h4>No Feeds!</h4>;\r\n\r\n    if (this.props.feeds.length > 0) {\r\n      allFeeds = this.props.feeds.map((feed, index) => {\r\n        return (\r\n          <Feed\r\n            name={feed.Name}\r\n            description={feed.Description}\r\n            date={feed.date}\r\n            endDate={feed.EndDate}\r\n            id={feed._id}\r\n            deleteFeed={this.deleteFeed}\r\n            updatetheFeeds={this.updatetheFeeds}\r\n            key={index}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <h3> Feeds </h3>\r\n        {allFeeds}\r\n        <AddFeed AddFeed={this.props.AddFeeds} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Feeds);\r\n","import React from \"react\";\r\nimport {getoneSubjects} from '../StudentAPI';\r\nexport default class Student extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isedit:false\r\n        }\r\n    }\r\n\r\n    onchange = (event,input) => {\r\n        //set event for mulitpe input\r\n        this.setState({ [input]: event.target.value });\r\n    };\r\n    render() {\r\n        let editstudent = <div></div>;\r\n\r\n\r\n        if(this.state.isedit)\r\n        {\r\n            editstudent = <div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <label>First name</label>\r\n                        <input type=\"text\" onChange={(e)=>{this.onchange(e,\"FirstName\")}} className=\"form-control\" id=\"email\" placeholder=\"Enter First name\"\r\n                               name=\"email\"/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label>Last name</label>\r\n                        <input type=\"text\" onChange={(e)=>{this.onchange(e,\"LastName\")}} className=\"form-control\" placeholder=\"Enter Last name\" name=\"pswd\"/>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label>ID</label>\r\n                        <input type=\"text\" onChange={(e)=>{this.onchange(e,\"ID\")}} className=\"form-control\" placeholder=\"Enter ID\" name=\"pswd\"/>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <label>Gender</label>{\" \"}<br/>\r\n                <div className=\"form-check-inline\">\r\n                    <label className=\"form-check-label\">\r\n                        <input onChange={(e)=>{this.onchange(e,\"Gender\")}} value=\"Male\" type=\"radio\" className=\"form-check-input\" name=\"optradio\"/>Male\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-check-inline\">\r\n                    <label className=\"form-check-label\">\r\n                        <input onChange={(e)=>{this.onchange(e,\"Gender\")}}type=\"radio\" className=\"form-check-input\" value=\"Female\" name=\"optradio\"/>Female\r\n                    </label>\r\n                </div>\r\n\r\n                <br/>\r\n\r\n                <button type=\"submit\"  className=\"btn btn-primary\">Save</button>\r\n\r\n\r\n            </div>\r\n        }\r\n        return (\r\n\r\n            <tr>\r\n\r\n                <td>{this.props.FirstName}</td>\r\n                <td>{this.props.LastName}</td>\r\n                <td>{this.props.id}</td>\r\n                <td>{this.props.all.Gender}</td>\r\n\r\n                {/*<td>{this.nameOfSub(this.props.all.subject) }</td>*/}\r\n                <td>\r\n                    <button onClick={(id)=>{this.props.deleteStudent(this.props.all._id)}}\r\n                            className=\"btn btn-danger\">Delete</button>{\" \"}\r\n                    {/*<button onClick={()=>{this.setState({isedit:true})}} className=\"btn btn-secondary\">Edit</button>*/}\r\n                    <button onClick={()=>{this.props.editStudent(\"true\",{FirstName:this.props.FirstName,LastName:this.props.LastName,Gender:this.props.all.Gender,ID:this.props.all.ID,_id:this.props.all._id})}}\r\n                            className=\"btn btn-secondary\">Edit</button>\r\n\r\n                </td>\r\n\r\n            </tr>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {addnewStudent} from \"../StudentAPI\";\r\n\r\n\r\nexport default class AddNewStudent extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n       this.state = {\r\n            FirstName: '',\r\n            LastName: '',\r\n            Gender:'',\r\n            ID:\"\",\r\n            subject:[]\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     getAllSubjects().then((response)=>{\r\n    //         // console.log(\"res\",response.data.subjects)\r\n    //         //save student list in student state\r\n    //         // this.setState({subjects:response.data.subjects})\r\n    //\r\n    //         // console.log(\"res state\",subject);\r\n    //     })\r\n    //         .catch((error)=>{\r\n    //             // console.log(this.state.students);\r\n    //             console.log('api error:',error)\r\n    //         })\r\n    // }\r\n    onchange = (event,input) => {\r\n        //set event for mulitpe input\r\n        this.setState({ [input]: event.target.value });\r\n    };\r\n\r\n    SubmitHandeler = e => {\r\n        //const { alert, history } = this.props;\r\n        e.preventDefault();\r\n        console.log(\"this is state\", this.state);\r\n        const newStu = {\r\n            student: {\r\n                FirstName: this.state.FirstName,\r\n                LastName: this.state.LastName,\r\n                Gender: this.state.Gender,\r\n                ID: this.state.ID\r\n                // Teacher: this.state.Teacher\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    AddNewStuddent = ()=>{\r\n\r\n        let data = this.state;\r\n        console.log(\"old student array\",this.props.students);\r\n        addnewStudent(data).then((response)=>{\r\n            console.log(response);\r\n            console.log(this.props.students)\r\n            const newStudents = [...this.props.students];\r\n            const index = newStudents.indexOf(response.data);\r\n            console.log(\"res data\",response.data);\r\n            console.log(\"data\",data);\r\n            if (index !== -1) {\r\n\r\n            } else {\r\n                newStudents.push(response.data.student);\r\n            }\r\n            console.log(\"new array\",newStudents);\r\n            this.props.setStudents(newStudents);\r\n            console.log(\"main student array from\",this.props.students);\r\n            this.props.setShowform(false);\r\n        }).catch((error)=>{\r\n            console.log('API Error:',error);\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let allsub = <option> No subjects </option>;\r\n        if(this.state.subjects){\r\n            // console.log(this.state.subjects)\r\n            allsub = this.state.subjects.map((sub,index)=>{\r\n                return <option key={index} id={sub._id}> {sub.Name}</option>\r\n            });\r\n        }\r\n\r\n       return (\r\n              <div>\r\n\r\n                  <div className=\"row\">\r\n                      <div className=\"col\">\r\n                          <label>First name</label>\r\n                          <input type=\"text\" onChange={(e)=>{this.onchange(e,\"FirstName\")}} className=\"form-control\" id=\"email\" placeholder=\"Enter First name\"\r\n                                 name=\"email\"/>\r\n                      </div>\r\n                      <div className=\"col\">\r\n                          <label>Last name</label>\r\n                          <input type=\"text\" onChange={(e)=>{this.onchange(e,\"LastName\")}} className=\"form-control\" placeholder=\"Enter Last name\" name=\"pswd\"/>\r\n                      </div>\r\n\r\n                      <div className=\"col\">\r\n                          <label>ID</label>\r\n                          <input type=\"text\" onChange={(e)=>{this.onchange(e,\"ID\")}} className=\"form-control\" placeholder=\"Enter ID\" name=\"pswd\"/>\r\n                      </div>\r\n                  </div>\r\n\r\n\r\n                  <label>Gender</label>{\" \"}<br/>\r\n                  <div className=\"form-check-inline\">\r\n                      <label className=\"form-check-label\">\r\n                          <input onChange={(e)=>{this.onchange(e,\"Gender\")}} value=\"Male\" type=\"radio\" className=\"form-check-input\" name=\"optradio\"/>Male\r\n                      </label>\r\n                  </div>\r\n                  <div className=\"form-check-inline\">\r\n                      <label className=\"form-check-label\">\r\n                          <input onChange={(e)=>{this.onchange(e,\"Gender\")}}type=\"radio\" className=\"form-check-input\" value=\"Female\" name=\"optradio\"/>Female\r\n                      </label>\r\n                  </div>\r\n\r\n                  <br/>\r\n                  <br/>\r\n                  {/*<div className=\"form-group\">*/}\r\n                  {/*    <label htmlFor=\"sel1\">Subjects list:</label>*/}\r\n                  {/*    <select className=\"form-control\" id=\"sel1\">*/}\r\n                  {/*        /!*<option>1</option>*!/*/}\r\n                  {/*        {allsub}*/}\r\n                  {/*    </select>*/}\r\n                  {/*</div>*/}\r\n                        {/*onClick={this.AddNewStuddent}*/}\r\n                        <button type=\"submit\" onClick={this.AddNewStuddent} className=\"btn btn-primary\">Save</button>\r\n\r\n             </div>\r\n\r\n       );\r\n    }\r\n   }\r\n\r\n\r\n","import apiUrl from '../apiConfig';\r\nimport axios from 'axios';\r\n// INDEX, SHOW, CREATE, UPDATE, DESTROY\r\n// Get All Students\r\nconst getAllStudent = () => {\r\n    console.log(apiUrl);\r\n    return axios.get(`${apiUrl}/students`);\r\n};\r\n//Delete Article by ID\r\nconst deleteStudentByID = (id) => {\r\n    return axios.delete(`${apiUrl}/students/${id}`);\r\n}\r\nconst addnewStudent = (data) => {\r\n    // return axios.post(`${apiUrl}/students`, {student:{FirstName:data.FirstName,LastName:data.LastName,Gender:data.Gender,subject:data.subject,ID:data.ID}} );\r\n    return axios.post(`${apiUrl}/students`, {student:data} );\r\n}\r\nconst updateStudent = (data,id) => {\r\n    return axios.patch(`${apiUrl}/students/${id}`,{student:data});\r\n}\r\nconst getoneSubjects = (id) => {\r\n    console.log(apiUrl);\r\n    return axios.get(`${apiUrl}/subjects/${id}`);\r\n};\r\nexport { getAllStudent,deleteStudentByID,getoneSubjects,addnewStudent,updateStudent };","import React from \"react\";\r\nimport Student from \"./Student\";\r\nimport {getAllStudent, deleteStudentByID,updateStudent} from \"../StudentAPI\"\r\nimport AddNewStudent from \"./AddNewStudent\";\r\n\r\nexport default class Students extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    state = {\r\n        students:[],\r\n        subjects:[],\r\n        isadd:false,\r\n        isedit:false,\r\n        tempstudent:{},\r\n        FirstName:\"\",\r\n        LastName:\"\",\r\n        ID:\"\"\r\n\r\n    };\r\n\r\n    //for set the new student array after add\r\n    setStudents = (newStudents)=>{\r\n        console.log(\"students\",newStudents);\r\n        this.setState({students:newStudents})\r\n    };\r\n\r\n    //to set the form to hide after add new student\r\n    setShowform = (check)=>{\r\n    this.setState({isadd:check});\r\n    };\r\n\r\n    //to call function api to render the list of students\r\n    componentDidMount(){\r\n        // get all student from api request\r\n        this.getAll()\r\n\r\n             }\r\n    getAll=()=>{\r\n        getAllStudent()\r\n            .then((response)=>{\r\n                console.log(\"res\",response.data.students)\r\n                //save student list in student state\r\n                this.setState({students:response.data.students})\r\n            })\r\n            .catch((error)=>{\r\n                // console.log(this.state.students);\r\n                console.log('api error:',error)\r\n            })\r\n\r\n\r\n    };\r\n        //handle deleted student from api call\r\n         deleteStudent = (id) => {\r\n        console.log(\"the student id to delete\",id)\r\n        deleteStudentByID(id)\r\n            .then((response)=>{\r\n                console.log(`the student with id ${id} has been deleted.`);\r\n                const newStudentList =  this.state.students.filter((student) => {\r\n                    return student._id !== id;\r\n                });\r\n                this.setState({students:newStudentList})\r\n            })\r\n            .catch((error)=> {\r\n                console.log('API Error:',error);\r\n            })\r\n    };\r\n\r\n\r\n    //to toggle the form to show for add new student\r\n    addnewstudent= (event)=>{\r\n        event.preventDefault();\r\n        const doesShow = this.state.isadd;\r\n        // console.log(\"work\");\r\n        this.setState({isadd: !doesShow})\r\n    };\r\n\r\n\r\n    editStudent = (isclick,studentInfo)=>{\r\n            console.log(\"student for update\",studentInfo);\r\n        this.setState({\r\n            isedit:isclick,\r\n            tempstudent:studentInfo\r\n\r\n        })\r\n\r\n    }\r\n    onchange = (event,input) => {\r\n        //set event for mulitpe input\r\n        event.preventDefault();\r\n        this.setState({ [input]: event.target.value });\r\n        this.setState({ID:this.state.tempstudent.ID});\r\n        this.setState({_id:this.state.tempstudent._id});\r\n    };\r\n\r\n    // handle update call\r\n    handleUpdate = ()=>{\r\n        // event.preventDefault();\r\n        // get specfic student\r\n        const onest = {\r\n            FirstName:this.state.FirstName,\r\n            LastName:this.state.LastName,\r\n            ID:this.state.ID,\r\n            Gender:this.state.tempstudent.Gender,\r\n            _id:this.state._id\r\n        };\r\n\r\n\r\n        console.log(onest);\r\n        //let data = this.state;\r\n        updateStudent(onest,this.state._id).then((response)=>{\r\n            console.log(this.state.students);\r\n            console.log(\"temp array for student\",this.state.tempstudent);\r\n            const updateStudent = [...this.state.students];\r\n            const index = updateStudent.indexOf(this.state.tempstudent);\r\n            const indexOfStudent = this.state.students.findIndex(\r\n                student => student._id === this.state._id);\r\n            console.log(\"indexOfStudent\",indexOfStudent)\r\n            console.log(\"res data\",response);\r\n            let newart =[...this.state.students];\r\n            newart = updateStudent[indexOfStudent];\r\n            console.log(\"new student \",newart);\r\n            console.log(\"index \",index);\r\n\r\n            newart= onest;\r\n            const currentStudent = [...this.state.students];\r\n            currentStudent[indexOfStudent] = newart;\r\n            console.log(\"new a\",newart);\r\n            this.setStudents(currentStudent);\r\n            this.setState({isedit: false})\r\n\r\n        }).catch((error)=>{\r\n            console.log('API Error:',error);\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        //to render list of student from the state\r\n        let allStudent = <h4>No Students</h4>;\r\n        if(this.state.students.length > 0)\r\n        {\r\n            allStudent = this.state.students.map((student,index)=>{\r\n                return <Student editStudent={this.editStudent} all={student} FirstName={student.FirstName} LastName={student.LastName}\r\n                                 key={index} id={student.ID} deleteStudent={this.deleteStudent} />\r\n            });\r\n        }\r\n        // to render the form comp after the value is click\r\n        let addnewst = <div></div>;\r\n        if(this.state.isadd)\r\n        {\r\n            addnewst = <AddNewStudent setShowform={this.setShowform} students={this.state.students} setStudents={(n)=>{this.setStudents(n)}}/>\r\n        }\r\n\r\n\r\n        // for Edit Student form\r\n        let editstudent = <div></div>;\r\n        if(this.state.isedit) {\r\n            editstudent = <div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <label>First name</label>\r\n                        <input type=\"text\" onChange={(e) => {\r\n                            this.onchange(e, \"FirstName\")\r\n                        }} className=\"form-control\" id=\"email\" placeholder={this.state.tempstudent.FirstName}\r\n                               name=\"FirstName\" value={this.state.FirstName}/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label>Last name</label>\r\n                        <input type=\"text\" onChange={(e) => {\r\n                            this.onchange(e, \"LastName\")\r\n                        }} className=\"form-control\" placeholder={this.state.tempstudent.LastName} name=\"LastName\"\r\n                               value={this.state.LastName}/>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label>ID</label>\r\n                        <input disabled type=\"number\" onChange={(e) => {\r\n                            this.onchange(e, \"ID\")\r\n                        }}  className=\"form-control\" placeholder={this.state.tempstudent.ID} name=\"ID\"/>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <label>Gender : </label>{\" \"}{this.state.tempstudent.Gender}\r\n                <br/>\r\n\r\n                <button onClick={this.handleUpdate} type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n\r\n\r\n            </div>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Student List</h2>\r\n\r\n                {addnewst}\r\n                {editstudent}\r\n                <br/>\r\n\r\n                <button className=\"btn btn-primary\" onClick={this.addnewstudent}>Add new Student</button>\r\n                <br/><br/>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Firstname</th>\r\n                        <th>Lastname</th>\r\n                        <th>ID</th>\r\n                        <th>Gender</th>\r\n                        {/*<th>Subject</th>*/}\r\n                        <th>Actions</th>\r\n\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {allStudent}\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './App.scss'\r\nimport { Route } from 'react-router-dom'\r\n\r\nimport AuthenticatedRoute from './auth/components/AuthenticatedRoute'\r\nimport Header from './header/Header'\r\nimport SignUp from './auth/components/SignUp'\r\nimport SignIn from './auth/components/SignIn'\r\nimport SignOut from './auth/components/SignOut'\r\nimport AlertDismissible from './auth/components/AlertDismissible'\r\nimport Subjects from \"./auth/components/subjects\"\r\nimport Feeds from \"./auth/components/feeds\"\r\nimport Students from \"./auth/components/Students\";\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      user: null,\r\n      alerts: [],\r\n      subjects: [],\r\n      feeds:[]\r\n    };\r\n  }\r\n\r\n  setUser = user => this.setState({ user });\r\n\r\n  clearUser = () => this.setState({ user: null });\r\n\r\n  alert = (message, type) => {\r\n    this.setState({ alerts: [...this.state.alerts, { message, type }] });\r\n  };\r\n\r\n  setSubjects = subjects => {\r\n    this.setState({ subjects: subjects });\r\n  };\r\n\r\n  AddSubjects = subjects => {\r\n    this.setState({\r\n      subjects: [...this.state.subjects, subjects]\r\n    });\r\n  };\r\n  setFeeds = feeds => {\r\n    this.setState({ feeds: feeds });\r\n  };\r\n  AddFeeds = feeds => {\r\n    this.setState({\r\n      feeds: [...this.state.feeds, feeds]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { alerts, user, subjects } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Header user={user} />\r\n        {alerts.map((alert, index) => (\r\n          <AlertDismissible\r\n            key={index}\r\n            variant={alert.type}\r\n            message={alert.message}\r\n          />\r\n        ))}\r\n        <main className=\"container\">\r\n          <Route\r\n            path=\"/sign-up\"\r\n            render={() => <SignUp alert={this.alert} setUser={this.setUser} />}\r\n          />\r\n          <Route\r\n            path=\"/sign-in\"\r\n            render={() => <SignIn alert={this.alert} setUser={this.setUser} />}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path=\"/sign-out\"\r\n            render={() => (\r\n              <SignOut\r\n                alert={this.alert}\r\n                clearUser={this.clearUser}\r\n                user={user}\r\n              />\r\n            )}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path=\"/Subjects\"\r\n            render={() => (\r\n              <Subjects\r\n                alert={this.alert}\r\n                user={user}\r\n                subjects={this.state.subjects}\r\n                setSubjects={this.setSubjects}\r\n                AddSubjects={this.AddSubjects}\r\n              />\r\n            )}\r\n          />\r\n             \r\n\r\n          <AuthenticatedRoute\r\n              user={user}\r\n              path=\"/Students\"\r\n              render={() => (\r\n                 <Students/>\r\n              )}\r\n          />\r\n\r\n          <AuthenticatedRoute \r\n            user={user}\r\n            path=\"/Feeds\"\r\n            render={() => (\r\n              <Feeds\r\n                alert={this.alert}\r\n                user={user}\r\n                feeds={this.state.feeds}\r\n                setFeeds={this.setFeeds}\r\n                AddFeeds={this.AddFeeds}\r\n              />\r\n            )}\r\n          />\r\n\r\n         \r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport App from './App'\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nconst appJsx = (\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n)\r\n\r\nReactDOM.render(appJsx, document.getElementById('root'))\r\n"],"sourceRoot":""}